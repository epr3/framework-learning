version: "3.5"

services:
  database:
    container_name: book-store-api-mysql
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: book-store
      MYSQL_USER: book-store
      MYSQL_PASSWORD: secret
    volumes:
<<<<<<< HEAD
      - mysql:/var/lib/mysql
=======
      - book-store_mysql:/var/lib/mysql
>>>>>>> remove DS_Store from git
    ports:
      - 33006:3306

  api:
    container_name: book-store-api
    build:
      context: .
      dockerfile: ./containers/python/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - database

  celery-worker:
    container_name: book-store-api-celery-worker
    build:
      context: .
      dockerfile: ./containers/python/Dockerfile
    volumes:
      - .:/code
    command: celery -A app worker -l info
    depends_on:
      - redis

  redis:
    container_name: book-store-api-redis
    image: redis:5

  mailhog:
    container_name: book-store-api-mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8083:8025

  redis-commander:
    container_name: book-store-api-redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: >
        default:redis:6379:0,
        cache:redis:6379:1,
        session:redis:6379:2,
        queue:redis:6379:3
    ports:
      - 8082:8081

  phpmyadmin:
    container_name: book-store-api-phpmyadmin
    depends_on:
      - database
    image: phpmyadmin/phpmyadmin
    ports:
      - 8081:80
    environment:
      PMA_HOST: database
      PMA_PORT: 3306

volumes:
  book-store_mysql:

networks:
  default:
    name: book-store-network
